openapi: '3.0.3'
info:
  title: API Title
  version: '1.0'
servers:
  - url: http://localhost:3610/v1
tags:
  - name: Users ðŸ‘¤
    description: Endpoints for managing users, including user creation, retrieval, and updates.
paths:
  /users/register:
    post:
      tags:
        - Users ðŸ‘¤
      summary: Create a new user
      description: This endpoint creates a new user with the provided name, email, password, and biography.
      x-eov-operation-handler: userController
      operationId: create
      requestBody:
        $ref: '#/components/requestBodies/PostRequestBody'
      responses:
        201:
          description: User successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    format: int64
                    description: HTTP status code indicating successful operation.
                    default: 201
                  message:
                    type: string
                    description: Descriptive message of the operation.
                    default: Created
                  data:
                    $ref: '#/components/schemas/User'
                additionalProperties: false
                required:
                  - statusCode
                  - message
                  - data
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        409:
          $ref: '#/components/responses/Conflict'
        500:
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: |
            The unique identifier for the account, represented as a UUID (Universally Unique Identifier).
            This ID is automatically generated when the account is created.
          example: 550e8400-e29b-41d4-a716-446655440000
        createdAt:
          type: string
          format: date-time
          description: |
            The date and time when the account was created. It is stored in ISO 8601 format (e.g., `2024-10-04T12:35:43.030Z`).
          example: 2024-10-04T12:35:43.030Z
        updatedAt:
          type: string
          format: date-time
          description: |
            The date and time when the account was last updated. It is stored in ISO 8601 format (e.g., `2024-10-04T12:35:43.030Z`).
          example: 2024-10-04T12:35:43.030Z
        name:
          type: string
          description: The name of the user.
          example: John Doe
        email:
          type: string
          description: The email address of the user.
          example: john.doe@example.com
        biography:
          type: string
          description: A short biography of the user.
          example: A software developer from California.
      additionalProperties: false
      required:
        - id
        - createdAt
        - updatedAt
        - name
        - email
        - biography
  requestBodies:
    PostRequestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The name of the user.
                example: John Doe
              email:
                type: string
                description: The email address of the user.
                example: john.doe@example.com
              password:
                type: string
                description: The password for the user account.
                example: P@ssw0rd!
              biography:
                type: string
                description: A short biography of the user.
                example: A software developer from California.
            required:
              - name
              - email
              - password
            additionalProperties: false
  responses:
    Ok:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: integer
                format: int64
                description: HTTP status code indicating a successful request.
                default: 200
              message:
                type: string
                description: Descriptive message indicating successful operation.
                default: Request successful.
              data:
                type: object
                description: Additional data returned with the response, if applicable.
            required:
              - statusCode
              - message
            additionalProperties: false

    Created:
      description: Created
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: integer
                format: int64
                description: HTTP status code indicating a resource was successfully created.
                default: 201
              message:
                type: string
                description: Descriptive message indicating successful creation.
                default: Resource created successfully.
            required:
              - statusCode
              - message
            additionalProperties: false

    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: integer
                format: int64
                description: HTTP status code indicating a bad request error.
                default: 400
              message:
                type: string
                description: Descriptive message of the error.
                default: Bad Request
              errorCode:
                type: string
                enum:
                  - BAD_REQUEST
                description: >
                  Possible error codes:

                  - `BAD_REQUEST`: Indicates a bad request error.'
            required:
              - statusCode
              - message
              - errorCode
            additionalProperties: false

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: integer
                format: int64
                description: HTTP status code indicating an unauthorized error.
                default: 401
              message:
                type: string
                description: Descriptive message of the error.
                default: Unauthorized
              errorCode:
                type: string
                enum:
                  - UNAUTHORIZED
                description: >
                  Possible error codes:

                  - `UNAUTHORIZED`: Indicates an unauthorized error.'
            required:
              - statusCode
              - message
              - errorCode
            additionalProperties: false

    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: integer
                format: int64
                description: HTTP status code indicating a forbidden error.
                default: 403
              message:
                type: string
                description: Descriptive message of the error.
                default: Forbidden
              errorCode:
                type: string
                enum:
                  - FORBIDDEN
                description: >
                  Possible error codes:

                  - `FORBIDDEN`: Indicates a forbidden error.'
            required:
              - statusCode
              - message
              - errorCode
            additionalProperties: false

    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: integer
                format: int64
                description: HTTP status code indicating a not found error.
                default: 404
              message:
                type: string
                description: Descriptive message of the error.
                default: Not Found
              errorCode:
                type: string
                enum:
                  - NOT_FOUND
                  - USER_NOT_FOUND
                description: >
                  Possible error codes:

                  - `NOT_FOUND`: Indicates a not found error.'
            required:
              - statusCode
              - message
              - errorCode
            additionalProperties: false

    Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: integer
                format: int64
                description: HTTP status code indicating a conflict error.
                default: 409
              message:
                type: string
                description: Descriptive message of the error.
                default: Conflict
              errorCode:
                type: string
                enum:
                  - CONFLICT
                description: >
                  Possible error codes:

                  - `CONFLICT`: Indicates a conflict error.'
            required:
              - statusCode
              - message
              - errorCode
            additionalProperties: false

    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: integer
                format: int64
                description: HTTP status code indicating an error.
                default: 500
              message:
                type: string
                description: Descriptive message of the error.
                default: Internal Server Error
              errorCode:
                type: string
                enum:
                  - INTERNAL_SERVER_ERROR
                description: >
                  Possible error codes:

                  - `INTERNAL_SERVER_ERROR`: Indicates an error.'
            required:
              - statusCode
              - message
              - errorCode
            additionalProperties: false
